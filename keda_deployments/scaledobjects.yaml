apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: demo-keda-scaledobject
spec:
  scaleTargetRef:
    apiVersion:    apps/v1
    kind:          Deployment
    name:          demo-keda
  pollingInterval:  10                               # Optional. Default: 30 seconds
  cooldownPeriod:   300                              # Optional. Default: 300 seconds
  minReplicaCount:  1                               # Optional. Default: 0
  maxReplicaCount:  6                                # Optional. Default: 100
  fallback:                                          # Optional. Section to specify fallback options
    failureThreshold: 3                              # Mandatory if fallback section is included
    replicas: 1
  advanced: # Optional. Section to specify advanced options
    horizontalPodAutoscalerConfig: # Optional. Section to specify HPA related options
      behavior: # Optional. Use to modify HPA's scaling behavior
        scaleDown:
          stabilizationWindowSeconds: 150
          policies:
            - type: Percent
              value: 100
              periodSeconds: 15
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090/
        metricName: http_server_requests_seconds # Note: name to identify the metric, generated value would be `prometheus-http_requests_total`
        query: sum(rate(http_server_requests_seconds_count{kubernetes_name="demo-keda-svc"}[1m])) # Note: query must return a vector/scalar single element response
        threshold: '1'
        # Optional fields:
        ignoreNullValues: "true" # Default is `true`, which means ignoring the empty value list from Prometheus. Set to `false` the scaler will return error when Prometheus target is lost
    - type: cpu
      metricType: Utilization # Allowed types are 'Utilization' or 'AverageValue'
      metadata:
        value: "90"